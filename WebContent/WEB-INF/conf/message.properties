server=\u4E00\u822C Redis \u670D\u52A1\u5668\u4FE1\u606F\uFF0C\u5305\u542B\u4EE5\u4E0B\u57DF\uFF1A
redis_version=Redis \u670D\u52A1\u5668\u7248\u672C
redis_git_sha1=Git SHA1
redis_git_dirty=Git dirty flag
os=Redis \u670D\u52A1\u5668\u7684\u5BBF\u4E3B\u64CD\u4F5C\u7CFB\u7EDF
arch_bits=\u67B6\u6784\uFF0832 \u6216 64 \u4F4D\uFF09
multiplexing_api=Redis \u6240\u4F7F\u7528\u7684\u4E8B\u4EF6\u5904\u7406\u673A\u5236
gcc_version=\u7F16\u8BD1 Redis \u65F6\u6240\u4F7F\u7528\u7684 GCC \u7248\u672C
process_id=\u670D\u52A1\u5668\u8FDB\u7A0B\u7684 PID
run_id=Redis \u670D\u52A1\u5668\u7684\u968F\u673A\u6807\u8BC6\u7B26\uFF08\u7528\u4E8E Sentinel \u548C\u96C6\u7FA4\uFF09
tcp_port=TCP/IP \u76D1\u542C\u7AEF\u53E3
uptime_in_seconds=\u81EA Redis \u670D\u52A1\u5668\u542F\u52A8\u4EE5\u6765\uFF0C\u7ECF\u8FC7\u7684\u79D2\u6570
uptime_in_days=\u81EA Redis \u670D\u52A1\u5668\u542F\u52A8\u4EE5\u6765\uFF0C\u7ECF\u8FC7\u7684\u5929\u6570
lru_clock=\u4EE5\u5206\u949F\u4E3A\u5355\u4F4D\u8FDB\u884C\u81EA\u589E\u7684\u65F6\u949F\uFF0C\u7528\u4E8E LRU \u7BA1\u7406

clients=\u5DF2\u8FDE\u63A5\u5BA2\u6237\u7AEF\u4FE1\u606F\uFF0C\u5305\u542B\u4EE5\u4E0B\u57DF\uFF1A
connected_clients=\u5DF2\u8FDE\u63A5\u5BA2\u6237\u7AEF\u7684\u6570\u91CF\uFF08\u4E0D\u5305\u62EC\u901A\u8FC7\u4ECE\u5C5E\u670D\u52A1\u5668\u8FDE\u63A5\u7684\u5BA2\u6237\u7AEF\uFF09
client_longest_output_list=\u5F53\u524D\u8FDE\u63A5\u7684\u5BA2\u6237\u7AEF\u5F53\u4E2D\uFF0C\u6700\u957F\u7684\u8F93\u51FA\u5217\u8868
client_longest_input_buf=\u5F53\u524D\u8FDE\u63A5\u7684\u5BA2\u6237\u7AEF\u5F53\u4E2D\uFF0C\u6700\u5927\u8F93\u5165\u7F13\u5B58
blocked_clients=\u6B63\u5728\u7B49\u5F85\u963B\u585E\u547D\u4EE4\uFF08BLPOP\u3001BRPOP\u3001BRPOPLPUSH\uFF09\u7684\u5BA2\u6237\u7AEF\u7684\u6570\u91CF

memory=\u5185\u5B58\u4FE1\u606F\uFF0C\u5305\u542B\u4EE5\u4E0B\u57DF\uFF1A
used_memory=\u7531 Redis \u5206\u914D\u5668\u5206\u914D\u7684\u5185\u5B58\u603B\u91CF\uFF0C\u4EE5\u5B57\u8282\uFF08byte\uFF09\u4E3A\u5355\u4F4D
used_memory_human=\u4EE5\u4EBA\u7C7B\u53EF\u8BFB\u7684\u683C\u5F0F\u8FD4\u56DE Redis \u5206\u914D\u7684\u5185\u5B58\u603B\u91CF
used_memory_rss=\u4ECE\u64CD\u4F5C\u7CFB\u7EDF\u7684\u89D2\u5EA6\uFF0C\u8FD4\u56DE Redis \u5DF2\u5206\u914D\u7684\u5185\u5B58\u603B\u91CF\uFF08\u4FD7\u79F0\u5E38\u9A7B\u96C6\u5927\u5C0F\uFF09\u3002\u8FD9\u4E2A\u503C\u548C top \u3001 ps \u7B49\u547D\u4EE4\u7684\u8F93\u51FA\u4E00\u81F4\u3002
used_memory_peak=Redis \u7684\u5185\u5B58\u6D88\u8017\u5CF0\u503C\uFF08\u4EE5\u5B57\u8282\u4E3A\u5355\u4F4D\uFF09
used_memory_peak_human=\u4EE5\u4EBA\u7C7B\u53EF\u8BFB\u7684\u683C\u5F0F\u8FD4\u56DE Redis \u7684\u5185\u5B58\u6D88\u8017\u5CF0\u503C
used_memory_lua=Lua \u5F15\u64CE\u6240\u4F7F\u7528\u7684\u5185\u5B58\u5927\u5C0F\uFF08\u4EE5\u5B57\u8282\u4E3A\u5355\u4F4D\uFF09
mem_fragmentation_ratio=used_memory_rss \u548C used_memory \u4E4B\u95F4\u7684\u6BD4\u7387
mem_allocator=\u5728\u7F16\u8BD1\u65F6\u6307\u5B9A\u7684\uFF0C Redis \u6240\u4F7F\u7528\u7684\u5185\u5B58\u5206\u914D\u5668\u3002\u53EF\u4EE5\u662F libc \u3001 jemalloc \u6216\u8005 tcmalloc \u3002
########################################################################################################################################

